name: PR
on:
  pull_request:
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-code-generator:
    strategy:
      matrix:
        python-version: [3.9]
    name: run code generator tests
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Results
        uses: actions/cache@v2
        id: cache-tests-results
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-tests-code-generator-results-1
      - name: Install latest stable rustc
        uses: actions-rs/toolchain@v1
        with:
            toolchain: 1.66.0
            override: true
            components: rustfmt, clippy, rust-src
      - uses: actions/checkout@v2
      - name: test code generator
        working-directory: crates/codegen
        run: |
          cargo test contract_tests::tests::
  tests:
    strategy:
      matrix:
        python-version: [3.9]
    name: run tests in tests
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install latest stable rustc
        uses: actions-rs/toolchain@v1
        with:
            toolchain: 1.66.0
            override: true
            components: rustfmt, clippy, rust-src, llvm-tools-preview
      - name: Cache grcov
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo
      - name: Install grcov
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        run: |
          cargo install grcov
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python3 -m pip install -U pip setuptools
          python3 -m pip install wheel
          python3 -m pip install pytest
          python3 -m pip install pytest-xdist
          python3 -m pip install ipyeos
          python3 -m pip install eoscdt
          python3 -m pip install rust-contracts-builder
      - name: Run eosdebugger
        run: |
          PYTHON_SHARED_LIB_PATH=${{ env.pythonLocation }}/lib/libpython3.9.so eosdebugger &
      - name: Install binaryen
        run: |
          set -e
          curl -L https://github.com/WebAssembly/binaryen/releases/download/version_109/binaryen-version_109-x86_64-linux.tar.gz | tar xzf -
          echo "`pwd`/binaryen-version_109/bin" > $GITHUB_PATH
      - name: run unit tests
        working-directory: tests
        run: |
          export CARGO_INCREMENTAL=0
          pushd testnotify/receiver
          rust-contract build 
          popd
          pushd testnotify/sender
          rust-contract build
          popd
          rust-contract build
          RUST_BACKTRACE=1 cargo test --release -- --test-threads=1
      - name: code coverage report
        working-directory: tests
        run: |
          export CARGO_INCREMENTAL=0
          export RUSTFLAGS="-Cinstrument-coverage -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off"
          TEST_COVERAGE=TRUE cargo test -- --test-threads=1
          grcov . --binary-path=target/debug -s ../crates -t lcov --llvm --branch --ignore-not-existing -o chain.lcov
          curl -S -f https://codecov.io/bash -o codecov
          chmod +x codecov
          ./codecov -f chain.lcov

  examples:
    strategy:
      matrix:
        python-version: [3.9]
    name: run tests in examples
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install latest stable rustc
        uses: actions-rs/toolchain@v1
        with:
            toolchain: 1.66.0
            override: true
            components: rustfmt, clippy, rust-src
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python3 -m pip install -U pip setuptools
          python3 -m pip install wheel
          python3 -m pip install pytest
          python3 -m pip install pytest-xdist
          python3 -m pip install ipyeos
          python3 -m pip install rust-contracts-builder
      - name: Run eosdebugger
        run: |
          PYTHON_SHARED_LIB_PATH=${{ env.pythonLocation }}/lib/libpython3.9.so eosdebugger &
      - name: Install binaryen
        run: |
          set -e
          curl -L https://github.com/WebAssembly/binaryen/releases/download/version_109/binaryen-version_109-x86_64-linux.tar.gz | tar xzf -
          echo "`pwd`/binaryen-version_109/bin" > $GITHUB_PATH
      - name: run tests in examples
        working-directory: examples
        run: |
          PYTHON_SHARED_LIB_PATH=${{ env.pythonLocation }}/lib/libpython3.9.so make -j3 -S
